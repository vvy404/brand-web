"use client"
// import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
// import Router from "next/router";

import Header from '@/components/public/Header';
import Footer from "@/components/public/Footer";
import LoginComp from "@/components/login/LoginComp";
import "./globals.css";
import { getCurrentUserInfo } from "@/apis/auth/getCurrentUserInto";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Router.events.on('routeChangeStart', (...args)=> {
  //   console.log('router change, args =', ...args);
  // })
  const [isShowSignIn, setIsShowSignIn] = useState<boolean>(false);
  const [isShowSignUp, setIsShowSigUp] = useState<boolean>(false);
  const [isUserSignIn, setUserSignIn] = useState<boolean>(false);

  const handleSignInClick = (param = false) => {
    console.log(param);
    setIsShowSignIn(param);
  }
  const handleSignUpClick = (param = false) => {
    console.log(param);
    setIsShowSigUp(param)
  }
  const handleShowPop = () => {
    setIsShowSignIn(false);
    setIsShowSigUp(false);
  }
  const handleUserStatusChange = () => {
    setUserSignIn(true)
  }

  const getUserInfo = async () => {
    const res = await getCurrentUserInfo();
    if (res && !res.code && res.data?.userid) {
      setUserSignIn(true);
    }
  }

  useEffect(() => {
    console.log('---document.cookie', document.cookie);
    getUserInfo();
  }, [])

  return (
    <html lang="en">
      <body className={`${inter.className} ${isShowSignIn || isShowSignUp ? "overflow-hidden" : ""}`}>
        <Header
          showUser={isUserSignIn}
          onClickSignIn={handleSignInClick}
          onClickSignUp={handleSignUpClick}
          setUserStatus={handleUserStatusChange}
        ></Header>
        {children}
        <div id="__next">
          <LoginComp
            showSignUp={isShowSignUp}
            showSignIn={isShowSignIn}
            setMaskClose={handleShowPop}
            setUserStatus={handleUserStatusChange}
          ></LoginComp>
        </div>
        <Footer></Footer>
      </body>
    </html>
  );
}
